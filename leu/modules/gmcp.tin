#nop --
#nop Class Definitions
#nop --

#var gmcp-description {Funzioni del protocllo GMCP}
#var gmcp-help {
Gestione del protocollo di GMCP.\n
}

#nop --
#nop Modloader Stuff
#nop --

#alias gmcp-register {
	#nop need to check: events;
	#if {@isloaded{functions}} {
		register_module gmcp
	} {
		fail_module gmcp
	}
}

#EVENT {IAC WILL GMCP}
{
    #info SYSTEM save;
    #send {$TELNET[IAC]$TELNET[DO]$TELNET[GMCP]\};
    #send {$TELNET[IAC]$TELNET[SB]$TELNET[GMCP] core.hello { "client": "$info[SYSTEM][CLIENT_NAME]", "version": "$info[SYSTEM][CLIENT_VERSION]" } $TELNET[IAC]$TELNET[SE]\};
    #send {$TELNET[IAC]$TELNET[SB]$TELNET[GMCP] core.supports.set [ "room 1", "room.info 1", "char 1", "char.status 1" ] $TELNET[IAC]$TELNET[SE]\};
    #class msdp kill;
    #variable comm_protcol "GMCP"
}

#EVENT {IAC SB GMCP char.status IAC SE}
{
    #variable gmcp[char][status] {%0}
}

#EVENT {IAC SB GMCP char.base IAC SE}
{
    #variable gmcp[char][base] {%0}
}

#EVENT {IAC SB GMCP char.maxstats IAC SE}
{
    #variable gmcp[char][maxstats] {%0}
}

#EVENT {IAC SB GMCP char.worth IAC SE}
{
    #variable gmcp[char][worth] {%0}
}

#EVENT {IAC SB GMCP char.group IAC SE}
{
    #variable gmcp[char][group] {%0}
}

#EVENT {IAC SB GMCP char.vitals IAC SE}
{
    #VARIABLE gmcp[char][vitals] {%0};			
    gui_ingame_refresh
}




