#nop VSOF;
#nop -------------------------------------------------------------------------;
#nop File principale, carica e predisponi tutto;
#nop -------------------------------------------------------------------------;

#class LEU open;

#nop -- Importa le librerie         --;
#var libray ./lib
#var mod ./leu/modules
#var saves ./leu/saves
#var imgs ./leu/imgs
#read $libray/colors.tin
#read $libray/filesystem.tin
#read $libray/modloader.tin

#nop -- Load in the modules --;
load_module functions
load_module syslog
load_module queues
load_module events
load_module help
load_module counter
load_module telnet
load_module mxp
load_module mslp
load_module msdp
load_module gmcp
load_module macro
load_module map
load_module bar_comm
load_module bar_side
#nop triggers for one window;
#nop load_module trigger_attached;
#nop triggers for multi windows;
#nop load_module trigger_detached;
load_module alias
load_module gui_ingame
load_module triggers

#nop -------------------------------------------------------------------------;
#nop Macro to add movment with kyepad;
#nop -------------------------------------------------------------------------;

#macro {\eOq} {d; #echo d}
#macro {\eOr} {s; #echo s}
#macro {\eOt} {w; #echo w}
#macro {\eOu} {look; exits; info mob; info obj}
#macro {\eOv} {e; #echo e}
#macro {\eOw} {u; #echo u}
#macro {\eOx} {n; #echo n}

#nop -------------------------------------------------------------------------;
#nop Session's Events;
#nop -------------------------------------------------------------------------;

#event {SCREEN LOCATION}
{
    #VARIABLE scrTopY {%2};
    #VARIABLE scrTopX {%3}
}

#EVENT {SESSION DISCONNECTED}
{ 
    #SCREEN raise {SCREEN LOCATION};
    #SCREEN get height tmpscrh;
    #SCREEN get width  tmpscrw;
    #class roomimagesclass assign #var rname "crname=$gmcp[room][info][name]";
    #VARIABLE roomimg $gmcp[room][info][num];
    #format {roomimg} {vnum=%s.png} {$roomimg};
    #class roomimagesclass assign #var num $roomimg;
    #math {tmpscrh} {$tmpscrh + $scrTopY};
    #math {tmpscrw} {$tmpscrw + $scrTopX};
    #class roomimagesclass assign #var cscrH "scrH=$tmpscrh";
    #class roomimagesclass assign #var cscrW "scrW=$tmpscrw";
    #class roomimagesclass assign #var cscrtx "scrtx=$scrTopX";
    #class roomimagesclass assign #var cscrty "scrty=$scrTopY";
    #class roomimagesclass write $imgs/currentroom.txt;
    #MAP write $saves/map.dat
}

#nop -------------------------------------------------------------------------;
#nop Varyous events;
#nop -------------------------------------------------------------------------;

#EVENT {SCREEN RESIZE}
{
    gui_ingame_resize;
    gui_ingame_refresh;
    #SCREEN refresh;
    #BUFFER end
}

#EVENT {SCREEN ROTATE LANDSCAPE}
{
    gui_ingame_resize
    gui_ingame_refresh;
}

#EVENT {SCREEN ROTATE PORTRAIT}
{ 
    gui_ingame_resize
    gui_ingame_refresh;
}

#EVENT {RECEIVED ERROR}
{
    #echo <118>%h { TOKENIZER };
    #info tokenizer -1;
    #echo <118>%h
}

#nop -------------------------------------------------------------------------;
#nop Use mouse click to change the input cursor's position;
#nop -------------------------------------------------------------------------;

#EVENT {SHORT-CLICKED MOUSE BUTTON ONE -1}
{
	#cursor position %1
}

#nop -------------------------------------------------------------------------;
#nop Inizializza la nuova gui_ingame e dagli una rinfrescata;
#nop -------------------------------------------------------------------------;
gui_ingame_init
gui_ingame_refresh
#SCREEN raise {SCREEN RESIZE}
#SCREEN raise {SCREEN LOCATION}
#SCREEN raise {DESKTOP DIMENSIONS}
#SCREEN raise {SCREEN DIMENSIONS}

#class LEU close






